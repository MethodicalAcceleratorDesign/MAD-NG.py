***pymad.recv: binary data 4 bytes
***pymad.recv: [io.stdout:setvbuf('line')] 25 bytes
***pymad.recv: binary data 4 bytes
***pymad.recv: [py:send('started')] 18 bytes
***pymad.send: [str_] 4 bytes
***pymad.send: binary data 4 bytes
***pymad.send: [started] 7 bytes
***pymad.recv: binary data 4 bytes
***pymad.recv: [element = MAD.element
sequence = MAD.sequence
mtable = MAD.mtable
twiss = MAD.twiss
beta0 = MAD.beta0
beam = MAD.beam
survey = MAD.survey
object = MAD.object
track = MAD.track
match = MAD.match
] 194 bytes
***pymad.recv: binary data 4 bytes
***pymad.recv: [py:__err(true):send(MAD, false):__err(false)] 44 bytes
***pymad.send: [ref_] 4 bytes
***pymad.recv: binary data 4 bytes
***pymad.recv: [py:__err(true):send(MAD['env'], false):__err(false)] 51 bytes
***pymad.send: [ref_] 4 bytes
***pymad.recv: binary data 4 bytes
***pymad.recv: [py:__err(true):send(MAD['env']['version'], false):__err(false)] 62 bytes
***pymad.send: [str_] 4 bytes
***pymad.send: binary data 4 bytes
***pymad.send: [1.1.3] 5 bytes
***pymad.recv: binary data 4 bytes
***pymad.recv: [
function __mklast__ (a, b, ...)
  if type(b) == "nil" then return a
  else                     return {a, b, ...}
  end
end
_last = {}
  ] 138 bytes
***pymad.recv: binary data 4 bytes
***pymad.recv: [py:__fin()] 10 bytes
***pymad.send: [str_] 4 bytes
***pymad.send: binary data 4 bytes
***pymad.send: [<closing pipe>] 14 bytes
